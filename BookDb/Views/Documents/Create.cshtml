@{
    ViewData["Title"] = "Thêm tài liệu mới";
}

<h2>Thêm tài liệu mới</h2>

<form id="uploadForm" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-group mb-3">
        <label for="title">Tiêu đề <span class="text-danger">*</span></label>
        <input type="text" name="title" id="title" class="form-control" required />
        <div class="invalid-feedback">Vui lòng nhập tiêu đề</div>
    </div>

    <div class="form-group mb-3">
        <label for="category">Lĩnh vực</label>
        <input type="text" name="category" id="category" class="form-control" />
    </div>

    <div class="form-group mb-3">
        <label for="author">Tác giả</label>
        <input type="text" name="author" id="author" class="form-control" />
    </div>

    <div class="form-group mb-3">
        <label for="description">Mô tả</label>
        <textarea name="description" id="description" class="form-control" rows="3"></textarea>
    </div>

    <div class="form-group mb-3">
        <label for="file">Chọn file <span class="text-danger">*</span></label>
        <input type="file" name="file" id="file" class="form-control" required
               accept=".pdf,.docx,.txt,.xlsx" />
        <small class="form-text text-muted">Hỗ trợ: PDF, DOCX, TXT, XLSX (Tối đa 50MB)</small>
        <div class="invalid-feedback">Vui lòng chọn file</div>
        <div id="fileInfo" class="mt-2 text-info" style="display:none;"></div>
    </div>

    <!-- Progress Bar -->
    <div class="mb-3" id="progressContainer" style="display:none;">
        <label>Tiến trình tải lên:</label>
        <div class="progress">
            <div id="uploadProgress" class="progress-bar progress-bar-striped progress-bar-animated"
                 role="progressbar" style="width: 0%">
                0%
            </div>
        </div>
    </div>

    <!-- Status Messages -->
    <div id="statusMessage" class="alert" style="display:none;" role="alert"></div>

    <div class="form-group">
        <button type="submit" id="submitBtn" class="btn btn-primary">
            <span id="submitText">Lưu</span>
            <span id="submitSpinner" class="spinner-border spinner-border-sm d-none"></span>
        </button>
        <a asp-action="Index" class="btn btn-secondary">Hủy</a>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            const MAX_FILE_SIZE = 50 * 1024 * 1024; // 50MB
            let uploadInProgress = false;

            // File input change event
            $('#file').on('change', function () {
                const file = this.files[0];
                if (file) {
                    if (file.size > MAX_FILE_SIZE) {
                        showStatus('File quá lớn. Vui lòng chọn file nhỏ hơn 50MB', 'danger');
                        $(this).val('');
                        $('#fileInfo').hide();
                        return;
                    }

                    const fileSize = formatFileSize(file.size);
                    $('#fileInfo').html(`<strong>File đã chọn:</strong> ${file.name} (${fileSize})`).show();
                }
            });

            // Form validation
            $('#uploadForm').on('submit', function (e) {
                e.preventDefault();

                if (uploadInProgress) {
                    showStatus('Đang tải lên, vui lòng đợi...', 'warning');
                    return;
                }

                // Validate form
                const form = this;
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                const title = $('#title').val().trim();
                const file = $('#file')[0].files[0];

                if (!title || !file) {
                    showStatus('Vui lòng điền đầy đủ thông tin bắt buộc', 'danger');
                    return;
                }

                uploadDocument();
            });

            function uploadDocument() {
                const formData = new FormData($('#uploadForm')[0]);
                uploadInProgress = true;

                // Update UI
                $('#submitBtn').prop('disabled', true);
                $('#submitText').text('Đang tải lên...');
                $('#submitSpinner').removeClass('d-none');
                $('#progressContainer').show();
                $('#statusMessage').hide();

                $.ajax({
                    url: '@Url.Action("Create", "Documents")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        const xhr = new window.XMLHttpRequest();
                        // Upload progress
                        xhr.upload.addEventListener('progress', function (e) {
                            if (e.lengthComputable) {
                                const percentComplete = Math.round((e.loaded / e.total) * 100);
                                updateProgress(percentComplete);
                            }
                        }, false);
                        return xhr;
                    },
                    success: function (response) {
                        updateProgress(100);
                        showStatus('Tải lên thành công! Đang chuyển hướng...', 'success');

                        // Send notification via SignalR
                        if (window.NotificationHub) {
                            const title = $('#title').val();
                            window.NotificationHub.sendNotification(`Tài liệu mới: ${title}`);
                        }

                        // Redirect after 2 seconds
                        setTimeout(function () {
                            window.location.href = '@Url.Action("Index", "Documents")';
                        }, 2000);
                    },
                    error: function (xhr) {
                        let errorMsg = 'Có lỗi xảy ra khi tải lên';

                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMsg = xhr.responseJSON.message;
                        } else if (xhr.status === 413) {
                            errorMsg = 'File quá lớn';
                        } else if (xhr.status === 400) {
                            errorMsg = 'Dữ liệu không hợp lệ';
                        }

                        showStatus(errorMsg, 'danger');
                        resetUploadUI();
                    },
                    complete: function () {
                        uploadInProgress = false;
                    }
                });
            }

            function updateProgress(percent) {
                $('#uploadProgress')
                    .css('width', percent + '%')
                    .text(percent + '%');
            }

            function showStatus(message, type) {
                const alertClass = 'alert-' + type;
                $('#statusMessage')
                    .removeClass('alert-success alert-danger alert-warning alert-info')
                    .addClass(alertClass)
                    .html(message)
                    .show();
            }

            function resetUploadUI() {
                $('#submitBtn').prop('disabled', false);
                $('#submitText').text('Lưu');
                $('#submitSpinner').addClass('d-none');
                updateProgress(0);
                setTimeout(function () {
                    $('#progressContainer').hide();
                }, 3000);
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];
            }

            // Real-time form validation
            $('#title, #file').on('blur', function () {
                if ($(this).val().trim() === '') {
                    $(this).addClass('is-invalid');
                } else {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                }
            });
        });
    </script>
}