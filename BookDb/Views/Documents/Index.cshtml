@model BookDb.Views.Documents.IndexModel

@{
    ViewData["Title"] = Model.Title;
}

<h2>@Model.Title</h2>

<div class="row mb-3">
    <div class="col-md-8">
        <a asp-action="Create" class="btn btn-primary">+ Thêm tài liệu mới</a>
        <button type="button" class="btn btn-info" id="refreshBtn">
            <span class="spinner-border spinner-border-sm d-none" id="refreshSpinner"></span>
            Làm mới
        </button>
    </div>
    <div class="col-md-4">
        <form method="get" asp-action="Index" id="searchForm">
            <div class="input-group">
                <input type="text" name="q" id="searchQuery" class="form-control" placeholder="Tìm kiếm..." value="@Model.SearchQuery" />
                <button type="submit" class="btn btn-info">Tìm</button>
            </div>
        </form>
    </div>
</div>

<div id="documentsTable">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Tiêu đề</th>
                <th>Lĩnh vực</th>
                <th>Tác giả</th>
                <th>Ngày tạo</th>
                <th>Thao tác</th>
            </tr>
        </thead>
            <tbody id="documentsList">
            @foreach (var item in Model.Documents)
            {
                <tr data-document-id="@item.Id">
                    <td>@item.Title</td>
                    <td>@item.Category</td>
                    <td>@item.Author</td>
                    <td>@Model.GetFormattedDate(item.CreatedAt)</td>
                    <td>
                        <a asp-action="ViewDocument" asp-route-id="@item.Id" class="btn btn-sm btn-success">Xem</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Sửa</a>
                        <button type="button" class="btn btn-sm btn-danger delete-btn" data-id="@item.Id">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.3); z-index:9998;">
    <div style="position:absolute; top:50%; left:50%; transform:translate(-50%,-50%); background:white; padding:20px; border-radius:8px;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Đang xử lý...</p>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Ajax search with debounce
            let searchTimeout;
            $('#searchQuery').on('input', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function () {
                    performSearch();
                }, 500);
            });

            function performSearch() {
                const query = $('#searchQuery').val();
                $.ajax({
                    url: '@Url.Action("Index", "Documents")',
                    type: 'GET',
                    data: { q: query },
                    beforeSend: function () {
                        $('#refreshSpinner').removeClass('d-none');
                    },
                    success: function (response) {
                        const $html = $(response);
                        const newTableBody = $html.find('#documentsList').html();
                        $('#documentsList').html(newTableBody);
                        // No notification when searching
                    },
                    error: function () {
                        window.NotificationHub.showLocal('Có lỗi khi tìm kiếm', 'error');
                    },
                    complete: function () {
                        $('#refreshSpinner').addClass('d-none');
                    }
                });
            }

            // Ajax refresh
            $('#refreshBtn').on('click', function () {
                loadDocuments();
            });

            function loadDocuments() {
                $.ajax({
                    url: '@Url.Action("Index", "Documents")',
                    type: 'GET',
                    beforeSend: function () {
                        $('#refreshSpinner').removeClass('d-none');
                    },
                    success: function (response) {
                        const $html = $(response);
                        const newTableBody = $html.find('#documentsList').html();
                        $('#documentsList').html(newTableBody);
                        window.NotificationHub.showLocal('Đã làm mới danh sách', 'success');
                    },
                    error: function () {
                        window.NotificationHub.showLocal('Có lỗi khi làm mới', 'error');
                    },
                    complete: function () {
                        $('#refreshSpinner').addClass('d-none');
                    }
                });
            }

            // Ajax delete with SignalR notification
            $(document).on('click', '.delete-btn', function () {
                const documentId = $(this).data('id');
                const $row = $(this).closest('tr');
                const title = $row.find('td:first').text();

                if (!confirm('Bạn có chắc muốn xóa tài liệu "' + title + '"?')) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("Delete", "Documents")/' + documentId,
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    beforeSend: function () {
                        $('#loadingOverlay').show();
                    },
                    success: function (response) {
                        $row.fadeOut(300, function () {
                            $(this).remove();
                        });
                        window.NotificationHub.showLocal('Đã xóa tài liệu: ' + title, 'success');

                        // Send notification to all users via SignalR
                        window.NotificationHub.sendNotification('Tài liệu "' + title + '" đã bị xóa');
                    },
                    error: function (xhr) {
                        let errorMsg = 'Có lỗi khi xóa tài liệu';
                        if (xhr.status === 404) {
                            errorMsg = 'Không tìm thấy tài liệu';
                        }
                        window.NotificationHub.showLocal(errorMsg, 'error');
                    },
                    complete: function () {
                        $('#loadingOverlay').hide();
                    }
                });
            });

            // Listen for document updates via SignalR and auto-update the table
            if (window.NotificationHub && window.NotificationHub.connection) {
                setupDocumentUpdateListener();
            } else {
                // Wait for NotificationHub to initialize
                setTimeout(setupDocumentUpdateListener, 1000);
            }

            function setupDocumentUpdateListener() {
                if (!window.NotificationHub || !window.NotificationHub.connection) {
                    console.warn('NotificationHub not ready');
                    return;
                }

                const connection = window.NotificationHub.connection;

                // Listen for document updates
                connection.on('DocumentUpdated', function (data) {
                    console.log('Document updated:', data);
                    updateDocumentRow(data);
                });
            }

            function updateDocumentRow(document) {
                // Find the row for this document
                const $row = $('tr[data-document-id="' + document.Id + '"]');
                
                if ($row.length > 0) {
                    // Update the row cells with new data
                    $row.find('td:eq(0)').text(document.Title);
                    $row.find('td:eq(1)').text(document.Category);
                    $row.find('td:eq(2)').text(document.Author);
                    $row.find('td:eq(3)').text(document.CreatedAt);

                    // Add visual feedback - flash the row with animation
                    $row.css({
                        'background-color': '#d1e7dd',
                        'transition': 'background-color 0.3s ease'
                    });
                    
                    setTimeout(function () {
                        $row.css({
                            'background-color': '',
                            'transition': 'background-color 1s ease'
                        });
                    }, 500);

                    // Note: Global notification handler already shows a toast
                    // No need for duplicate notification here
                }
            }
        });
    </script>
}

@* Hidden anti-forgery token for AJAX requests *@
<form id="__AjaxAntiForgeryForm" style="display:none">
    @Html.AntiForgeryToken()
</form>